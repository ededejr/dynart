import { ComponentProps } from "react";
import BaseModel, { BaseModelConfiguration } from './base-model';
import Colors from './utilities/colors';

export default class DeLogoModel extends BaseModel {
  configuration: DeLogoModel.Configuration;

  constructor(configuration: Partial<DeLogoModel.Configuration>) {
    super(configuration);
    this.configuration = Object.assign(
      this.getDefaultConfiguration(),
      configuration
    );
  }

  render() {
    return (
      <>
        {this.renderBackground()}
        {this.renderLogo()}
      </>
    )
  }

  renderBackground() {
    const {
      props,
      getColor,
      generateProps
    } = this.configuration.background;

    const generatedProps = generateProps ? generateProps() : {};

    return (
      <rect 
        width={this.svgWidth} 
        height={this.svgHeight} 
        fill={getColor && getColor()}
        {...props} 
        {...generatedProps}
      />
    )
  }

  renderLogo() {
    const { 
      props,
      getColor, 
      generateProps
    } = this.configuration.logo;

    const generatedProps = generateProps ? generateProps(this.svgWidth, this.svgHeight) : {};

    return (
      <path
          d="M36.1888112,41.3200908 C36.1888112,43.775646 35.7204632,46.0749042 34.7837532,48.2179342 C33.8470432,50.3609642 32.5562304,52.2360873 30.9112762,53.8433598 C29.266322,55.4506323 27.3472376,56.7118759 25.1539654,57.6271283 C22.9606931,58.5423807 20.60753,59 18.0944056,59 C15.5812811,59 13.2281181,58.5423807 11.0348458,57.6271283 C8.84157359,56.7118759 6.92248915,55.4506323 5.27753497,53.8433598 C3.63258078,52.2360873 2.34176803,50.3609642 1.40505801,48.2179342 C0.468347987,46.0749042 0,43.775646 0,41.3200908 C0,38.8645356 0.468347987,36.5652775 1.40505801,34.4222474 C2.34176803,32.2792174 3.63258078,30.4040943 5.27753497,28.7968218 C6.92248915,27.1895493 8.84157359,25.9283057 11.0348458,25.0130533 C13.2281181,24.0978009 15.5812811,23.6401816 18.0944056,23.6401816 C20.1962915,23.6401816 22.1724915,23.9638636 24.023065,24.6112372 C25.8736385,25.2586109 27.5756836,26.1626881 29.1292514,27.323496 L29.1292514,0 L36.1888112,0 L36.1888112,41.3200908 Z M17.8662669,52.2123894 C19.3666316,52.2123894 20.7874102,51.9286292 22.1286453,51.3611004 C23.4698805,50.7935716 24.6406021,50.0103936 25.6408452,49.0115429 C26.6410884,48.0126922 27.4253582,46.8436004 27.9936781,45.5042324 C28.5619981,44.1648644 28.8461538,42.7460637 28.8461538,41.2477876 L28.8461538,41.1796845 C28.8461538,39.6814084 28.5619981,38.2739581 27.9936781,36.9572913 C27.4253582,35.6406244 26.6410884,34.482883 25.6408452,33.4840323 C24.6406021,32.4851816 23.4698805,31.7020036 22.1286453,31.1344748 C20.7874102,30.566946 19.3666316,30.2831858 17.8662669,30.2831858 C16.3659021,30.2831858 14.9451235,30.566946 13.6038884,31.1344748 C12.2626532,31.7020036 11.0919317,32.4851816 10.0916885,33.4840323 C9.09144534,34.482883 8.29580932,35.6519748 7.70475654,36.9913428 C7.11370377,38.3307108 6.81818182,39.7495116 6.81818182,41.2477876 C6.81818182,42.7460637 7.11370377,44.1648644 7.70475654,45.5042324 C8.29580932,46.8436004 9.09144534,48.0126922 10.0916885,49.0115429 C11.0919317,50.0103936 12.2626532,50.7935716 13.6038884,51.3611004 C14.9451235,51.9286292 16.3659021,52.2123894 17.8662669,52.2123894 Z M74.7943818,23.1712255 L46.0763668,23.1712255 C46.3505258,24.3816097 46.8188738,25.5135261 47.4814248,26.5670086 C48.1439758,27.6204911 48.9550175,28.5282656 49.9145741,29.2903593 C50.8741307,30.0524531 51.9479041,30.646429 53.1359266,31.0723049 C54.323949,31.4981808 55.5804924,31.7111156 56.9055944,31.7111156 C58.5048554,31.7111156 60.0012844,31.397317 61.3949261,30.7697104 C62.7885678,30.1421038 64.0108419,29.2679505 65.0617848,28.1472245 L73.355054,28.1472245 C73.0808964,28.8196601 72.7496245,29.4584644 72.3612325,30.0636565 C71.9728406,30.6688486 71.5501851,31.2628245 71.0932533,31.845602 C69.4482991,33.907738 67.3921373,35.5551807 64.924706,36.7879794 C62.4572747,38.020778 59.7842642,38.6371681 56.9055944,38.6371681 C54.39247,38.6371681 52.0393069,38.1776773 49.8460346,37.258682 C47.6527624,36.3396866 45.733678,35.0732851 44.0887238,33.4594395 C42.4437696,31.845594 41.1529568,29.9628024 40.2162468,27.8110083 C39.2795368,25.6592142 38.8111888,23.3505531 38.8111888,20.8849558 C38.8111888,18.4193584 39.2795368,16.1106973 40.2162468,13.9589032 C41.1529568,11.8071091 42.4437696,9.92431754 44.0887238,8.31047198 C45.733678,6.69662642 47.6527624,5.43022494 49.8460346,4.51122955 C52.0393069,3.59223416 54.39247,3.13274336 56.9055944,3.13274336 C59.7842642,3.13274336 62.4572747,3.74913346 64.924706,4.98193215 C67.3921373,6.21473084 69.4482991,7.88458766 71.0932533,9.9915527 C72.601128,11.7847144 73.6977477,13.8916479 74.3831453,16.3124162 C74.7943838,17.7469456 75,19.2711102 75,20.8849558 C75,21.6918785 74.9314613,22.4539608 74.7943818,23.1712255 Z M57.1678322,9.39823009 C54.9382013,9.39823009 52.9474894,10.0185969 51.1956366,11.2593491 C49.4437837,12.5001014 48.1128506,14.1422488 47.2027972,16.1858407 L67.1328671,16.1858407 C66.9053538,15.7965851 66.6892193,15.4073353 66.4844573,15.0180797 C66.2796953,14.6288241 66.0635609,14.2639025 65.8360475,13.9233038 C64.7894861,12.5122523 63.5154304,11.4053233 62.0138423,10.6024836 C60.5122542,9.79964391 58.8969336,9.39823009 57.1678322,9.39823009 Z"
          fillRule="nonzero"
          fill={getColor && getColor()}
          {...props}
          {...generatedProps}
      />
    );
  }

  private getDefaultConfiguration(): DeLogoModel.Configuration {
    return {
      logo: {
        props: {
          fill: "#FEFEFE",
          transform: `translate(${this.svgWidth * 0.05} ${this.svgHeight * 0.4}) scale(1.5)`,
        }
      },
      background: {
        props: {
          fill: Colors.random.color(),
        }
      }
    }
  }
}

export declare namespace DeLogoModel {
  type DefaultComponentType = ComponentProps<'rect'>;

  export interface BackgroundConfiguration<T =  ComponentProps<'rect'>> {
    /**
     * Props applied to each layer
     */
     props?: T,
     /**
      * A function to generate colors per layer
      */
    getColor?: () => string,
     /**
      * Generate props per layer
      */
     generateProps?: () => T
  }

  export interface LogoConfiguration<T = ComponentProps<'path'>> {
    /**
     * Props applied to each layer
     */
    props?: T,
    /**
     * A function to generate colors per layer
     */
     getColor?: () => string,
     /**
      * Generate props for logo
      */
      generateProps?: (width: number, height: number) => T
  }

  export interface Configuration extends BaseModelConfiguration {
    background: BackgroundConfiguration,
    logo: LogoConfiguration
  }
}